{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","dt","Date","month","getMonth","date","getDate","day","getDay","TodoList","setTodos","test","newTodos","updateTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.656ab27d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  })\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random()*1000),\r\n      text: input,\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <>\r\n          <input type=\"text\" placeholder=\"Update your item\" value={input} name=\"text\" className=\"todo-input edit\" onChange={handleChange} ref={inputRef} />\r\n          <button className=\"todo-button edit\">Update</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputRef} />\r\n          <button className=\"todo-button\">Add Todo</button>\r\n        </>\r\n      )}\r\n      \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm","import React, { useState } from 'react'\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\nimport { TiTick } from 'react-icons/ti';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value)\r\n    setEdit({ id: null, value: ''});\r\n  };\r\n\r\n  if(edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\r\n      <div key={todo.id}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <TiTick onClick={() => completeTodo(todo.id)} className=\"complete-icon\"/>\r\n        <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className=\"delete-icon\" />\r\n        <TiEdit onClick={() => setEdit({ id: todo.id, value:todo.text})} className=\"edit-icon\" />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo","import React, {useState} from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\n\r\nvar dt = new Date();\r\nvar month = dt.getMonth()+1;\r\nvar date = dt.getDate();\r\nvar week = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\r\nvar day = week[dt.getDay()];\r\n\r\nfunction TodoList(){\r\n\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  }\r\n\r\n  const completeTodo = id => {\r\n    let updateTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updateTodos);\r\n  };\r\n\r\n  return(\r\n    <div className=\"todo-app\">\r\n      <h1>{month}/{date} ({day})&nbsp;&nbsp;&nbsp;TodoList</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App(){\n  return (\n    <div>\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}