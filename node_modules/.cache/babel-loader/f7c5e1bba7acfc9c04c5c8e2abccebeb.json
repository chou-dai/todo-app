{"ast":null,"code":"import _toConsumableArray from\"C:/Users/c.daiki/Desktop/react/todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/c.daiki/Desktop/react/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Todo from'./Todo';import TodoForm from'./TodoForm';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var dt=new Date();var month=dt.getMonth()+1;var date=dt.getDate();var week=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];var day=week[dt.getDay()];function TodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTodo=function addTodo(todo){if(!todo.text||/^\\s*$/.test(todo.text)){return;}var newTodos=[todo].concat(_toConsumableArray(todos));setTodos(newTodos);};var updateTodo=function updateTodo(todoId,newValue){if(!newValue.text||/^\\s*$/.test(newValue.text)){return;}setTodos(function(prev){return prev.map(function(item){return item.id===todoId?newValue:item;});});};var removeTodo=function removeTodo(id){var removeArr=_toConsumableArray(todos).filter(function(todo){return todo.id!==id;});setTodos(removeArr);};var completeTodo=function completeTodo(id){var updateTodos=todos.map(function(todo){if(todo.id===id){todo.isComplete=!todo.isComplete;}return todo;});setTodos(updateTodos);};return/*#__PURE__*/_jsxs(\"div\",{className:\"todo-app\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[month,\"/\",date,\" (\",day,\")\\xA0\\xA0\\xA0TodoList\"]}),/*#__PURE__*/_jsx(TodoForm,{onSubmit:addTodo}),/*#__PURE__*/_jsx(Todo,{todos:todos,completeTodo:completeTodo,removeTodo:removeTodo,updateTodo:updateTodo})]});}export default TodoList;","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/todo-app/src/components/TodoList.js"],"names":["React","useState","Todo","TodoForm","dt","Date","month","getMonth","date","getDate","week","day","getDay","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updateTodos","isComplete"],"mappings":"4PAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAGA,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,IAAJ,EAAT,CACA,GAAIC,CAAAA,KAAK,CAAGF,EAAE,CAACG,QAAH,GAAc,CAA1B,CACA,GAAIC,CAAAA,IAAI,CAAGJ,EAAE,CAACK,OAAH,EAAX,CACA,GAAIC,CAAAA,IAAI,CAAG,CAAC,KAAD,CAAO,KAAP,CAAa,KAAb,CAAmB,KAAnB,CAAyB,KAAzB,CAA+B,KAA/B,CAAqC,KAArC,CAAX,CACA,GAAIC,CAAAA,GAAG,CAAGD,IAAI,CAACN,EAAE,CAACQ,MAAH,EAAD,CAAd,CAEA,QAASC,CAAAA,QAAT,EAAmB,CAEjB,cAA0BZ,QAAQ,CAAC,EAAD,CAAlC,wCAAOa,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,CACtB,GAAG,CAACA,IAAI,CAACC,IAAN,EAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,CAA0C,CACxC,OACD,CAED,GAAME,CAAAA,QAAQ,EAAIH,IAAJ,4BAAaH,KAAb,EAAd,CAEAC,QAAQ,CAACK,QAAD,CAAR,CACD,CARD,CAUA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,QAAT,CAAsB,CACvC,GAAG,CAACA,QAAQ,CAACL,IAAV,EAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAArB,CAAkD,CAChD,OACD,CAEDH,QAAQ,CAAC,SAAAS,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAAAC,IAAI,QAAKA,CAAAA,IAAI,CAACC,EAAL,GAAYL,MAAZ,CAAqBC,QAArB,CAAgCG,IAArC,EAAb,CAAJ,EAAL,CAAR,CACD,CAND,CAQA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAD,EAAE,CAAI,CACvB,GAAME,CAAAA,SAAS,CAAG,mBAAIf,KAAJ,EAAWgB,MAAX,CAAkB,SAAAb,IAAI,QAAIA,CAAAA,IAAI,CAACU,EAAL,GAAYA,EAAhB,EAAtB,CAAlB,CAEAZ,QAAQ,CAACc,SAAD,CAAR,CACD,CAJD,CAMA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAJ,EAAE,CAAI,CACzB,GAAIK,CAAAA,WAAW,CAAGlB,KAAK,CAACW,GAAN,CAAU,SAAAR,IAAI,CAAI,CAClC,GAAIA,IAAI,CAACU,EAAL,GAAYA,EAAhB,CAAoB,CAClBV,IAAI,CAACgB,UAAL,CAAkB,CAAChB,IAAI,CAACgB,UAAxB,CACD,CACD,MAAOhB,CAAAA,IAAP,CACD,CALiB,CAAlB,CAMAF,QAAQ,CAACiB,WAAD,CAAR,CACD,CARD,CAUA,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,sBAAK1B,KAAL,KAAaE,IAAb,MAAqBG,GAArB,2BADF,cAEE,KAAC,QAAD,EAAU,QAAQ,CAAEK,OAApB,EAFF,cAGE,KAAC,IAAD,EAAM,KAAK,CAAEF,KAAb,CAAoB,YAAY,CAAEiB,YAAlC,CAAgD,UAAU,CAAEH,UAA5D,CAAwE,UAAU,CAAEP,UAApF,EAHF,GADF,CAOD,CAED,cAAeR,CAAAA,QAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\n\r\nvar dt = new Date();\r\nvar month = dt.getMonth()+1;\r\nvar date = dt.getDate();\r\nvar week = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\r\nvar day = week[dt.getDay()];\r\n\r\nfunction TodoList(){\r\n\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  }\r\n\r\n  const completeTodo = id => {\r\n    let updateTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updateTodos);\r\n  };\r\n\r\n  return(\r\n    <div className=\"todo-app\">\r\n      <h1>{month}/{date} ({day})&nbsp;&nbsp;&nbsp;TodoList</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}