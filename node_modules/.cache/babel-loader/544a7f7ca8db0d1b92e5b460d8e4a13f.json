{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\todo-app\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: todos.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this); // return todos.map((todo, index) => {\n  //   <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\n  //     <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n  //       {/* {todo.text} */}\n  //       helloworld\n  //     </div>\n  //     <div className=\"icon\">\n  //       <RiCloseCircleLine />\n  //       <TiEdit />\n  //     </div>\n  //   </div>\n  // });\n}\n\n_s(Todo, \"yNsriMnMMfyG4swHz2ZbmBWu/qY=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/todo-app/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","edit","setEdit","id","value","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAd,EAAuC;AAAA;;AAErC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAhC;AAMA,sBACE;AAAA,cAAKL,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,UADF,CARqC,CAWrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;GAvBQP,I;;KAAAA,I;AAyBT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({ todos, completeTodo }) {\r\n\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  })\r\n\r\n\r\n  return (\r\n    <h1>{todos.text}</h1>\r\n  )\r\n  // return todos.map((todo, index) => {\r\n  //   <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\r\n  //     <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n  //       {/* {todo.text} */}\r\n  //       helloworld\r\n  //     </div>\r\n  //     <div className=\"icon\">\r\n  //       <RiCloseCircleLine />\r\n  //       <TiEdit />\r\n  //     </div>\r\n  //   </div>\r\n  // });\r\n}\r\n\r\nexport default Todo\r\n\r\n"]},"metadata":{},"sourceType":"module"}