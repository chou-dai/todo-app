{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\todo-app\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { TiTick } from 'react-icons/ti';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo,\n  updateTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? \"todo-row complete\" : \"todo-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(TiTick, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Todo, \"yNsriMnMMfyG4swHz2ZbmBWu/qY=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/todo-app/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","TiTick","TodoForm","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA;AAAnC,CAAd,EAA+D;AAAA;;AAE7D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAC/BY,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC5BJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AAAEC,MAAAA,EAAE,EAAE,IAAN;AAAYC,MAAAA,KAAK,EAAE;AAAnB,KAAD,CAAP;AACD,GAHD;;AAKA,MAAGH,IAAI,CAACE,EAAR,EAAY;AACV,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAAxD;AAAA,4BACE;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAA9C;AAAA,gBACGI,IAAI,CAACG;AADR,OAAUH,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AAAmB,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CAA5C;AAAuD,QAAA,SAAS,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAX;AAAeC,UAAAA,KAAK,EAACG,IAAI,CAACG;AAA1B,SAAD,CAA9B;AAAiE,QAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAyEF,KAAzE;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAYD;;GA5BQZ,I;;KAAAA,I;AA8BT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\nimport { TiTick } from 'react-icons/ti';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value)\r\n    setEdit({ id: null, value: ''});\r\n  };\r\n\r\n  if(edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <TiTick />\r\n        <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className=\"delete-icon\" />\r\n        <TiEdit onClick={() => setEdit({ id: todo.id, value:todo.text})} className=\"edit-icon\" />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo\r\n\r\n"]},"metadata":{},"sourceType":"module"}