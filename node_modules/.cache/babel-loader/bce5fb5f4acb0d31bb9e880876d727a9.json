{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\todo-app\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar dt = new Date();\nvar month = dt.getMonth() + 1;\nvar date = dt.getDate();\nvar week = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\nvar day = week[dt.getDay()];\n\nfunction TodoList() {\n  _s();\n\n  const todomap = [{\n    task: '',\n    isCompleted: false\n  }];\n  const [todos, setTodo] = useState(todomap);\n  const [task, setTask] = useState('');\n\n  const handleNewTask = event => {\n    setTask(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (task === '') return;\n    setTodo(todos => [...todos, {\n      task,\n      isCompleted: false\n    }]);\n    setTask('');\n  };\n\n  const handleUpdateTask = index => {\n    let newTodos = todos.map((todo, todoIndex) => {\n      if (todoIndex === index) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n\n      return todo;\n    });\n    setTodo(newTodos);\n  };\n\n  const handleRemoveTask = index => {\n    const newTodos = [...todos].filter((todo, todoIndex) => todoIndex !== index);\n    setTodo(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [month, \"\\u6708\", date, \"\\u65E5(\", day, \"\\u66DC\\u65E5) ToDo List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"Add Task: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        placeholder: \"Add New Task\",\n        onChange: handleNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: todo.isCompleted === true ? {\n          textDecorationLine: 'line-through'\n        } : {},\n        children: [todo.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateTask(index),\n          children: \"\\u5B8C\\u4E86\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveTask(index),\n          children: \"\\u524A\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"nYqdj9qfEdYySCuzr5WQpZTyWn8=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/todo-app/src/components/TodoList.js"],"names":["React","useState","dt","Date","month","getMonth","date","getDate","week","day","getDay","TodoList","todomap","task","isCompleted","todos","setTodo","setTask","handleNewTask","event","target","value","handleSubmit","preventDefault","handleUpdateTask","index","newTodos","map","todo","todoIndex","handleRemoveTask","filter","textDecorationLine"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nvar dt = new Date();\r\nvar month = dt.getMonth()+1;\r\nvar date = dt.getDate();\r\nvar week = [\"日\",\"月\",\"火\",\"水\",\"木\",\"金\",\"土\"];\r\nvar day = week[dt.getDay()];\r\n\r\nfunction TodoList(){\r\n  const todomap = [\r\n    {\r\n      task: '',\r\n      isCompleted: false\r\n    },\r\n  ]\r\n\r\n  const [todos, setTodo] = useState(todomap);\r\n  const [task, setTask] = useState('')\r\n\r\n  const handleNewTask = (event) => {\r\n    setTask(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    if(task === '') return\r\n    setTodo(todos => [...todos, {task, isCompleted:false}])\r\n    setTask('')\r\n  }\r\n\r\n  const handleUpdateTask = index => {\r\n    let newTodos = todos.map((todo, todoIndex) => {\r\n      if(todoIndex === index){\r\n        todo.isCompleted = !todo.isCompleted\r\n      }\r\n      return todo;\r\n    })\r\n    setTodo(newTodos)\r\n  }\r\n\r\n  const handleRemoveTask = index => {\r\n    const newTodos = [...todos].filter((todo, todoIndex) => todoIndex !== index);\r\n    setTodo(newTodos)\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <h1>{month}月{date}日({day}曜日) ToDo List</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        Add Task: <input value={task} placeholder=\"Add New Task\" onChange={handleNewTask}/>\r\n      </form>\r\n      <ul>\r\n        {todos.map((todo, index) => (\r\n          <li key={index} style={todo.isCompleted === true ? {textDecorationLine:'line-through'}:{}}>\r\n            {todo.task}\r\n            <button onClick={() => handleUpdateTask(index)}>完了</button>\r\n            <button onClick={() => handleRemoveTask(index)}>削除</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}