{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c.daiki\\\\Desktop\\\\react\\\\todo-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 1000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a todo\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/c.daiki/Desktop/react/todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAR,IAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,CADS;AAEbC,MAAAA,IAAI,EAAEb;AAFO,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAWA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEK,YAAtC;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,YAA/B;AAA4C,MAAA,KAAK,EAAEN,KAAnD;AAA0D,MAAA,IAAI,EAAC,MAA/D;AAAsE,MAAA,SAAS,EAAC,YAAhF;AAA6F,MAAA,QAAQ,EAAEE;AAAvG;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzBQJ,Q;;KAAAA,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random()*1000),\r\n      text: input\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange} />\r\n      <button className=\"todo-button\">Add Todo</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}